<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Tic Tac Toe</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      background: linear-gradient(135deg, #FFD700, #FFB300); /* ✅ Changed to yellow gradient */
      color: white;
      font-family: Arial, sans-serif;
      height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .container {
      text-align: center;
    }

    h1 {
      font-size: 2em;
      margin-bottom: 20px;
      text-shadow: 0 0 10px cyan;
    }

    .choose-player {
      display: flex;
      justify-content: center;
      gap: 20px;
      margin-top: 20px;
    }

    .choose-player button {
      padding: 10px 20px;
      font-size: 1.2em;
      font-weight: bold;
      background-color: cyan;
      color: black;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      transition: 0.3s;
    }

    .choose-player button:hover {
      background-color: #00bfff;
    }

    .board {
      display: grid;
      grid-template-columns: repeat(3, 100px);
      gap: 10px;
      justify-content: center;
      margin: 20px auto;
    }

    .cell {
      width: 100px;
      height: 100px;
      background: rgba(255, 255, 255, 0.1);
      border: 2px solid cyan;
      border-radius: 10px;
      font-size: 2em;
      color: white;
      display: flex;
      justify-content: center;
      align-items: center;
      cursor: pointer;
    }

    .status, .reset-btn {
      margin-top: 20px;
    }

    .reset-btn button {
      padding: 10px 20px;
      font-size: 1em;
      background-color: cyan;
      color: black;
      font-weight: bold;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      transition: 0.3s;
    }

    .reset-btn button:hover {
      background-color: #00bfff;
    }
  </style>
</head>
<body>
  <div class="container">
    <!-- Welcome Page -->
    <div id="welcome">
      <h1>WELCOME TO TIC TAC TOE</h1>
      <p>CHOOSE YOUR PLAYER</p>
      <div class="choose-player">
        <button onclick="startGame('X')">X</button>
        <button onclick="startGame('O')">O</button>
      </div>
    </div>

    <!-- Game Area (hidden initially) -->
    <div id="game" style="display:none;">
      <h1>🎮 Tic-Tac-Toe</h1>
      <div class="status" id="status">Player X's turn</div>
      <div class="board" id="board"></div>
      <div class="reset-btn">
        <button onclick="resetGame()">Reset Game</button>
      </div>
    </div>
  </div>

  <script>
    let currentPlayer;
    let gameActive = true;
    let boardState = Array(9).fill("");
    const winningCombos = [
      [0,1,2],[3,4,5],[6,7,8],
      [0,3,6],[1,4,7],[2,5,8],
      [0,4,8],[2,4,6]
    ];

    function startGame(player) {
      currentPlayer = player;
      document.getElementById("welcome").style.display = "none";
      document.getElementById("game").style.display = "block";
      document.getElementById("status").textContent = `Player ${currentPlayer}'s turn`;
      createBoard();
    }

    function createBoard() {
      const board = document.getElementById("board");
      board.innerHTML = "";
      for (let i = 0; i < 9; i++) {
        const cell = document.createElement("div");
        cell.classList.add("cell");
        cell.addEventListener("click", () => handleClick(i));
        board.appendChild(cell);
      }
    }

    function handleClick(index) {
      if (!gameActive || boardState[index] !== "") return;

      boardState[index] = currentPlayer;
      document.querySelectorAll(".cell")[index].textContent = currentPlayer;

      if (checkWinner()) {
        document.getElementById("status").textContent = `🎉 Player ${currentPlayer} wins!`;
        gameActive = false;
        return;
      }

      if (boardState.every(cell => cell !== "")) {
        document.getElementById("status").textContent = "😐 It's a draw!";
        gameActive = false;
        return;
      }

      currentPlayer = currentPlayer === "X" ? "O" : "X";
      document.getElementById("status").textContent = `Player ${currentPlayer}'s turn`;
    }

    function checkWinner() {
      return winningCombos.some(combo =>
        combo.every(i => boardState[i] === currentPlayer)
      );
    }

    function resetGame() {
      boardState = Array(9).fill("");
      gameActive = true;
      currentPlayer = currentPlayer === "X" ? "O" : "X"; // Alternate start
      document.getElementById("status").textContent = `Player ${currentPlayer}'s turn`;
      createBoard();
    }
  </script>
</body>
</html>
